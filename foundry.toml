[profile.default]
src = "src"
out = "out"
libs = ["lib"]
remappings = [
    "@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
    "@compound-protocol/=lib/compound-protocol/contracts/",
    "forge-std/=lib/forge-std/src/"
]

# Mainnet forking configuration (for default profile)
eth_rpc_url = "${ETH_RPC_URL}"
fork_block_number = 18500000  # Block with stable Compound V2 deployment

# Gas reporting and optimization
gas_reports = ["*"]
gas_limit = 30000000
optimizer = true
optimizer_runs = 200

# Test configuration
verbosity = 2
auto_detect_solc = false
solc = "0.8.20"
evm_version = "london"

# Fuzz testing
fuzz = { runs = 1000 }
invariant = { runs = 256, depth = 15 }

# Additional settings for audit environment
fs_permissions = [
    { access = "read-write", path = "./audit-reports" },
    { access = "read", path = "./test/fixtures" }
]

[profile.ci]
# CI profile without fork configuration
src = "src"
out = "out" 
libs = ["lib"]
remappings = [
    "@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
    "@compound-protocol/=lib/compound-protocol/contracts/",
    "forge-std/=lib/forge-std/src/"
]
# No fork settings for CI - tests run locally
gas_limit = 30000000
optimizer = true
optimizer_runs = 200
verbosity = 2
auto_detect_solc = false
solc = "0.8.20"
evm_version = "london"
fuzz = { runs = 5000 }
invariant = { runs = 1000, depth = 20 }

[profile.fork-tests]
# Profile specifically for fork-dependent tests
src = "src"
out = "out"
libs = ["lib"]
remappings = [
    "@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
    "@compound-protocol/=lib/compound-protocol/contracts/",
    "forge-std/=lib/forge-std/src/"
]
eth_rpc_url = "${ETH_RPC_URL}"
fork_block_number = 18500000
gas_reports = ["*"]
gas_limit = 30000000
optimizer = true
optimizer_runs = 200
verbosity = 2
auto_detect_solc = false
solc = "0.8.20"
evm_version = "london"
fuzz = { runs = 1000 }
invariant = { runs = 256, depth = 15 }

[profile.intense]
fuzz = { runs = 10000 }
invariant = { runs = 2000, depth = 25 }

# RPC endpoints for different networks
[rpc_endpoints]
mainnet = "${ETH_RPC_URL}"
polygon = "${POLYGON_RPC_URL}"
arbitrum = "${ARBITRUM_RPC_URL}"
